name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [16, 18, 20]
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check formatting
        run: npm run format:check
        continue-on-error: ${{ matrix.node-version == 16 }}
      
      - name: Lint code
        run: npm run lint:check
        continue-on-error: ${{ matrix.node-version == 16 }}
      
      - name: Run unit tests
        run: npm run test
      
      - name: Run comprehensive tests
        run: npm run test:all
        continue-on-error: ${{ matrix.node-version == 16 }}
      
      - name: Build package
        run: npm run build
      
      - name: Test build artifacts
        run: |
          echo "Verifying build artifacts..."
          ls -la dist/
          test -f dist/index.js || exit 1
          test -f dist/index.esm.js || exit 1
          test -f dist/index.d.ts || exit 1
          echo "âœ… All build artifacts present"
      
      - name: Upload coverage reports
        if: matrix.node-version == 18 && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        run: npm audit --audit-level moderate
        continue-on-error: true
      
      - name: Check for high severity vulnerabilities
        run: npm audit --audit-level high

  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build package
        run: npm run build
      
      - name: Analyze bundle size
        run: |
          echo "ðŸ“Š Bundle Size Analysis"
          echo "========================"
          du -h dist/* | sort -hr
          echo ""
          echo "Total dist size: $(du -sh dist | cut -f1)"